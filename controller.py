import os
import time
import random
import _thread
from machine import Pin, PWM
from neopixel import NeoPixel
from rotary_irq_esp import RotaryIRQ
from task import Task

rgb_arr = [(0, 5, 250), (0, 10, 245), (0, 15, 240), (0, 20, 235), (0, 25, 230), (0, 30, 225), (0, 35, 220),
           (0, 40, 215),
           (0, 45, 210), (0, 50, 205), (0, 55, 200), (0, 60, 195), (0, 65, 190), (0, 70, 185), (0, 75, 180),
           (0, 80, 175),
           (0, 85, 170), (0, 90, 165), (0, 95, 160), (0, 100, 155), (0, 105, 150), (0, 110, 145), (0, 115, 140),
           (0, 120, 135), (0, 125, 130), (0, 130, 125), (0, 135, 120), (0, 140, 115), (0, 145, 110), (0, 150, 105),
           (0, 155, 100), (0, 160, 95), (0, 165, 90), (0, 170, 85), (0, 175, 80), (0, 180, 75), (0, 185, 70),
           (0, 190, 65),
           (0, 195, 60), (0, 200, 55), (0, 205, 50), (0, 210, 45), (0, 215, 40), (0, 220, 35), (0, 225, 30),
           (0, 230, 25),
           (0, 235, 20), (0, 240, 15), (0, 245, 10), (0, 250, 5), (5, 250, 0), (10, 245, 0), (15, 240, 0), (20, 235, 0),
           (25, 230, 0), (30, 225, 0), (35, 220, 0), (40, 215, 0), (45, 210, 0), (50, 205, 0), (55, 200, 0),
           (60, 195, 0),
           (65, 190, 0), (70, 185, 0), (75, 180, 0), (80, 175, 0), (85, 170, 0), (90, 165, 0), (95, 160, 0),
           (100, 155, 0),
           (105, 150, 0), (110, 145, 0), (115, 140, 0), (120, 135, 0), (125, 130, 0), (130, 125, 0), (135, 120, 0),
           (140, 115, 0), (145, 110, 0), (150, 105, 0), (155, 100, 0), (160, 95, 0), (165, 90, 0), (170, 85, 0),
           (175, 80, 0), (180, 75, 0), (185, 70, 0), (190, 65, 0), (195, 60, 0), (200, 55, 0), (205, 50, 0),
           (210, 45, 0),
           (215, 40, 0), (220, 35, 0), (225, 30, 0), (230, 25, 0), (235, 20, 0), (240, 15, 0), (245, 10, 0),
           (250, 5, 0)]

effects = [
    [(1, 15, 0), (3, 31, 0), (5, 47, 0), (7, 63, 0), (9, 79, 0), (11, 95, 0), (13, 111, 0), (15, 127, 0), (17, 143, 0),
     (19, 159, 0), (21, 175, 0), (23, 191, 0), (25, 207, 0), (27, 223, 0), (29, 239, 0), (31, 255, 0), (31, 255, 0),
     (29, 239, 0), (27, 223, 0), (25, 207, 0), (23, 191, 0), (21, 175, 0), (19, 159, 0), (17, 143, 0), (15, 127, 0),
     (13, 111, 0), (11, 95, 0), (9, 79, 0), (7, 63, 0), (5, 47, 0), (3, 31, 0), (1, 15, 0)],
    [(3, 13, 0), (7, 27, 0), (11, 41, 0), (15, 55, 0), (19, 69, 0), (23, 83, 0), (27, 97, 0), (31, 111, 0),
     (35, 125, 0), (39, 139, 0), (43, 153, 0), (47, 167, 0), (51, 181, 0), (55, 195, 0), (59, 209, 0), (63, 223, 0),
     (63, 223, 0), (59, 209, 0), (55, 195, 0), (51, 181, 0), (47, 167, 0), (43, 153, 0), (39, 139, 0), (35, 125, 0),
     (31, 111, 0), (27, 97, 0), (23, 83, 0), (19, 69, 0), (15, 55, 0), (11, 41, 0), (7, 27, 0), (3, 13, 0)],
    [(5, 11, 0), (11, 23, 0), (17, 35, 0), (23, 47, 0), (29, 59, 0), (35, 71, 0), (41, 83, 0), (47, 95, 0),
     (53, 107, 0), (59, 119, 0), (65, 131, 0), (71, 143, 0), (77, 155, 0), (83, 167, 0), (89, 179, 0), (95, 191, 0),
     (95, 191, 0), (89, 179, 0), (83, 167, 0), (77, 155, 0), (71, 143, 0), (65, 131, 0), (59, 119, 0), (53, 107, 0),
     (47, 95, 0), (41, 83, 0), (35, 71, 0), (29, 59, 0), (23, 47, 0), (17, 35, 0), (11, 23, 0), (5, 11, 0)],
    [(7, 9, 0), (15, 19, 0), (23, 29, 0), (31, 39, 0), (39, 49, 0), (47, 59, 0), (55, 69, 0), (63, 79, 0), (71, 89, 0),
     (79, 99, 0), (87, 109, 0), (95, 119, 0), (103, 129, 0), (111, 139, 0), (119, 149, 0), (127, 159, 0), (127, 159, 0),
     (119, 149, 0), (111, 139, 0), (103, 129, 0), (95, 119, 0), (87, 109, 0), (79, 99, 0), (71, 89, 0), (63, 79, 0),
     (55, 69, 0), (47, 59, 0), (39, 49, 0), (31, 39, 0), (23, 29, 0), (15, 19, 0), (7, 9, 0)],
    [(9, 7, 0), (19, 15, 0), (29, 23, 0), (39, 31, 0), (49, 39, 0), (59, 47, 0), (69, 55, 0), (79, 63, 0), (89, 71, 0),
     (99, 79, 0), (109, 87, 0), (119, 95, 0), (129, 103, 0), (139, 111, 0), (149, 119, 0), (159, 127, 0), (159, 127, 0),
     (149, 119, 0), (139, 111, 0), (129, 103, 0), (119, 95, 0), (109, 87, 0), (99, 79, 0), (89, 71, 0), (79, 63, 0),
     (69, 55, 0), (59, 47, 0), (49, 39, 0), (39, 31, 0), (29, 23, 0), (19, 15, 0), (9, 7, 0)],
    [(11, 5, 0), (23, 11, 0), (35, 17, 0), (47, 23, 0), (59, 29, 0), (71, 35, 0), (83, 41, 0), (95, 47, 0),
     (107, 53, 0), (119, 59, 0), (131, 65, 0), (143, 71, 0), (155, 77, 0), (167, 83, 0), (179, 89, 0), (191, 95, 0),
     (191, 95, 0), (179, 89, 0), (167, 83, 0), (155, 77, 0), (143, 71, 0), (131, 65, 0), (119, 59, 0), (107, 53, 0),
     (95, 47, 0), (83, 41, 0), (71, 35, 0), (59, 29, 0), (47, 23, 0), (35, 17, 0), (23, 11, 0), (11, 5, 0)],
    [(13, 3, 0), (27, 7, 0), (41, 11, 0), (55, 15, 0), (69, 19, 0), (83, 23, 0), (97, 27, 0), (111, 31, 0),
     (125, 35, 0), (139, 39, 0), (153, 43, 0), (167, 47, 0), (181, 51, 0), (195, 55, 0), (209, 59, 0), (223, 63, 0),
     (223, 63, 0), (209, 59, 0), (195, 55, 0), (181, 51, 0), (167, 47, 0), (153, 43, 0), (139, 39, 0), (125, 35, 0),
     (111, 31, 0), (97, 27, 0), (83, 23, 0), (69, 19, 0), (55, 15, 0), (41, 11, 0), (27, 7, 0), (13, 3, 0)],
    [(15, 1, 0), (31, 3, 0), (47, 5, 0), (63, 7, 0), (79, 9, 0), (95, 11, 0), (111, 13, 0), (127, 15, 0), (143, 17, 0),
     (159, 19, 0), (175, 21, 0), (191, 23, 0), (207, 25, 0), (223, 27, 0), (239, 29, 0), (255, 31, 0), (255, 31, 0),
     (239, 29, 0), (223, 27, 0), (207, 25, 0), (191, 23, 0), (175, 21, 0), (159, 19, 0), (143, 17, 0), (127, 15, 0),
     (111, 13, 0), (95, 11, 0), (79, 9, 0), (63, 7, 0), (47, 5, 0), (31, 3, 0), (15, 1, 0)],
    [(0, 15, 1), (0, 31, 3), (0, 47, 5), (0, 63, 7), (0, 79, 9), (0, 95, 11), (0, 111, 13), (0, 127, 15), (0, 143, 17),
     (0, 159, 19), (0, 175, 21), (0, 191, 23), (0, 207, 25), (0, 223, 27), (0, 239, 29), (0, 255, 31), (0, 255, 31),
     (0, 239, 29), (0, 223, 27), (0, 207, 25), (0, 191, 23), (0, 175, 21), (0, 159, 19), (0, 143, 17), (0, 127, 15),
     (0, 111, 13), (0, 95, 11), (0, 79, 9), (0, 63, 7), (0, 47, 5), (0, 31, 3), (0, 15, 1)],
    [(0, 13, 3), (0, 27, 7), (0, 41, 11), (0, 55, 15), (0, 69, 19), (0, 83, 23), (0, 97, 27), (0, 111, 31),
     (0, 125, 35), (0, 139, 39), (0, 153, 43), (0, 167, 47), (0, 181, 51), (0, 195, 55), (0, 209, 59), (0, 223, 63),
     (0, 223, 63), (0, 209, 59), (0, 195, 55), (0, 181, 51), (0, 167, 47), (0, 153, 43), (0, 139, 39), (0, 125, 35),
     (0, 111, 31), (0, 97, 27), (0, 83, 23), (0, 69, 19), (0, 55, 15), (0, 41, 11), (0, 27, 7), (0, 13, 3)],
    [(0, 11, 5), (0, 23, 11), (0, 35, 17), (0, 47, 23), (0, 59, 29), (0, 71, 35), (0, 83, 41), (0, 95, 47),
     (0, 107, 53), (0, 119, 59), (0, 131, 65), (0, 143, 71), (0, 155, 77), (0, 167, 83), (0, 179, 89), (0, 191, 95),
     (0, 191, 95), (0, 179, 89), (0, 167, 83), (0, 155, 77), (0, 143, 71), (0, 131, 65), (0, 119, 59), (0, 107, 53),
     (0, 95, 47), (0, 83, 41), (0, 71, 35), (0, 59, 29), (0, 47, 23), (0, 35, 17), (0, 23, 11), (0, 11, 5)],
    [(0, 9, 7), (0, 19, 15), (0, 29, 23), (0, 39, 31), (0, 49, 39), (0, 59, 47), (0, 69, 55), (0, 79, 63), (0, 89, 71),
     (0, 99, 79), (0, 109, 87), (0, 119, 95), (0, 129, 103), (0, 139, 111), (0, 149, 119), (0, 159, 127), (0, 159, 127),
     (0, 149, 119), (0, 139, 111), (0, 129, 103), (0, 119, 95), (0, 109, 87), (0, 99, 79), (0, 89, 71), (0, 79, 63),
     (0, 69, 55), (0, 59, 47), (0, 49, 39), (0, 39, 31), (0, 29, 23), (0, 19, 15), (0, 9, 7)],
    [(0, 7, 9), (0, 15, 19), (0, 23, 29), (0, 31, 39), (0, 39, 49), (0, 47, 59), (0, 55, 69), (0, 63, 79), (0, 71, 89),
     (0, 79, 99), (0, 87, 109), (0, 95, 119), (0, 103, 129), (0, 111, 139), (0, 119, 149), (0, 127, 159), (0, 127, 159),
     (0, 119, 149), (0, 111, 139), (0, 103, 129), (0, 95, 119), (0, 87, 109), (0, 79, 99), (0, 71, 89), (0, 63, 79),
     (0, 55, 69), (0, 47, 59), (0, 39, 49), (0, 31, 39), (0, 23, 29), (0, 15, 19), (0, 7, 9)],
    [(0, 5, 11), (0, 11, 23), (0, 17, 35), (0, 23, 47), (0, 29, 59), (0, 35, 71), (0, 41, 83), (0, 47, 95),
     (0, 53, 107), (0, 59, 119), (0, 65, 131), (0, 71, 143), (0, 77, 155), (0, 83, 167), (0, 89, 179), (0, 95, 191),
     (0, 95, 191), (0, 89, 179), (0, 83, 167), (0, 77, 155), (0, 71, 143), (0, 65, 131), (0, 59, 119), (0, 53, 107),
     (0, 47, 95), (0, 41, 83), (0, 35, 71), (0, 29, 59), (0, 23, 47), (0, 17, 35), (0, 11, 23), (0, 5, 11)],
    [(0, 3, 13), (0, 7, 27), (0, 11, 41), (0, 15, 55), (0, 19, 69), (0, 23, 83), (0, 27, 97), (0, 31, 111),
     (0, 35, 125), (0, 39, 139), (0, 43, 153), (0, 47, 167), (0, 51, 181), (0, 55, 195), (0, 59, 209), (0, 63, 223),
     (0, 63, 223), (0, 59, 209), (0, 55, 195), (0, 51, 181), (0, 47, 167), (0, 43, 153), (0, 39, 139), (0, 35, 125),
     (0, 31, 111), (0, 27, 97), (0, 23, 83), (0, 19, 69), (0, 15, 55), (0, 11, 41), (0, 7, 27), (0, 3, 13)],
    [(0, 1, 15), (0, 3, 31), (0, 5, 47), (0, 7, 63), (0, 9, 79), (0, 11, 95), (0, 13, 111), (0, 15, 127), (0, 17, 143),
     (0, 19, 159), (0, 21, 175), (0, 23, 191), (0, 25, 207), (0, 27, 223), (0, 29, 239), (0, 31, 255), (0, 31, 255),
     (0, 29, 239), (0, 27, 223), (0, 25, 207), (0, 23, 191), (0, 21, 175), (0, 19, 159), (0, 17, 143), (0, 15, 127),
     (0, 13, 111), (0, 11, 95), (0, 9, 79), (0, 7, 63), (0, 5, 47), (0, 3, 31), (0, 1, 15)],
    [(15, 0, 1), (31, 0, 3), (47, 0, 5), (63, 0, 7), (79, 0, 9), (95, 0, 11), (111, 0, 13), (127, 0, 15), (143, 0, 17),
     (159, 0, 19), (175, 0, 21), (191, 0, 23), (207, 0, 25), (223, 0, 27), (239, 0, 29), (255, 0, 31), (255, 0, 31),
     (239, 0, 29), (223, 0, 27), (207, 0, 25), (191, 0, 23), (175, 0, 21), (159, 0, 19), (143, 0, 17), (127, 0, 15),
     (111, 0, 13), (95, 0, 11), (79, 0, 9), (63, 0, 7), (47, 0, 5), (31, 0, 3), (15, 0, 1)],
    [(13, 0, 3), (27, 0, 7), (41, 0, 11), (55, 0, 15), (69, 0, 19), (83, 0, 23), (97, 0, 27), (111, 0, 31),
     (125, 0, 35), (139, 0, 39), (153, 0, 43), (167, 0, 47), (181, 0, 51), (195, 0, 55), (209, 0, 59), (223, 0, 63),
     (223, 0, 63), (209, 0, 59), (195, 0, 55), (181, 0, 51), (167, 0, 47), (153, 0, 43), (139, 0, 39), (125, 0, 35),
     (111, 0, 31), (97, 0, 27), (83, 0, 23), (69, 0, 19), (55, 0, 15), (41, 0, 11), (27, 0, 7), (13, 0, 3)],
    [(11, 0, 5), (23, 0, 11), (35, 0, 17), (47, 0, 23), (59, 0, 29), (71, 0, 35), (83, 0, 41), (95, 0, 47),
     (107, 0, 53), (119, 0, 59), (131, 0, 65), (143, 0, 71), (155, 0, 77), (167, 0, 83), (179, 0, 89), (191, 0, 95),
     (191, 0, 95), (179, 0, 89), (167, 0, 83), (155, 0, 77), (143, 0, 71), (131, 0, 65), (119, 0, 59), (107, 0, 53),
     (95, 0, 47), (83, 0, 41), (71, 0, 35), (59, 0, 29), (47, 0, 23), (35, 0, 17), (23, 0, 11), (11, 0, 5)],
    [(9, 0, 7), (19, 0, 15), (29, 0, 23), (39, 0, 31), (49, 0, 39), (59, 0, 47), (69, 0, 55), (79, 0, 63), (89, 0, 71),
     (99, 0, 79), (109, 0, 87), (119, 0, 95), (129, 0, 103), (139, 0, 111), (149, 0, 119), (159, 0, 127), (159, 0, 127),
     (149, 0, 119), (139, 0, 111), (129, 0, 103), (119, 0, 95), (109, 0, 87), (99, 0, 79), (89, 0, 71), (79, 0, 63),
     (69, 0, 55), (59, 0, 47), (49, 0, 39), (39, 0, 31), (29, 0, 23), (19, 0, 15), (9, 0, 7)],
    [(7, 0, 9), (15, 0, 19), (23, 0, 29), (31, 0, 39), (39, 0, 49), (47, 0, 59), (55, 0, 69), (63, 0, 79), (71, 0, 89),
     (79, 0, 99), (87, 0, 109), (95, 0, 119), (103, 0, 129), (111, 0, 139), (119, 0, 149), (127, 0, 159), (127, 0, 159),
     (119, 0, 149), (111, 0, 139), (103, 0, 129), (95, 0, 119), (87, 0, 109), (79, 0, 99), (71, 0, 89), (63, 0, 79),
     (55, 0, 69), (47, 0, 59), (39, 0, 49), (31, 0, 39), (23, 0, 29), (15, 0, 19), (7, 0, 9)],
    [(5, 0, 11), (11, 0, 23), (17, 0, 35), (23, 0, 47), (29, 0, 59), (35, 0, 71), (41, 0, 83), (47, 0, 95),
     (53, 0, 107), (59, 0, 119), (65, 0, 131), (71, 0, 143), (77, 0, 155), (83, 0, 167), (89, 0, 179), (95, 0, 191),
     (95, 0, 191), (89, 0, 179), (83, 0, 167), (77, 0, 155), (71, 0, 143), (65, 0, 131), (59, 0, 119), (53, 0, 107),
     (47, 0, 95), (41, 0, 83), (35, 0, 71), (29, 0, 59), (23, 0, 47), (17, 0, 35), (11, 0, 23), (5, 0, 11)],
    [(3, 0, 13), (7, 0, 27), (11, 0, 41), (15, 0, 55), (19, 0, 69), (23, 0, 83), (27, 0, 97), (31, 0, 111),
     (35, 0, 125), (39, 0, 139), (43, 0, 153), (47, 0, 167), (51, 0, 181), (55, 0, 195), (59, 0, 209), (63, 0, 223),
     (63, 0, 223), (59, 0, 209), (55, 0, 195), (51, 0, 181), (47, 0, 167), (43, 0, 153), (39, 0, 139), (35, 0, 125),
     (31, 0, 111), (27, 0, 97), (23, 0, 83), (19, 0, 69), (15, 0, 55), (11, 0, 41), (7, 0, 27), (3, 0, 13)],
    [(1, 0, 15), (3, 0, 31), (5, 0, 47), (7, 0, 63), (9, 0, 79), (11, 0, 95), (13, 0, 111), (15, 0, 127), (17, 0, 143),
     (19, 0, 159), (21, 0, 175), (23, 0, 191), (25, 0, 207), (27, 0, 223), (29, 0, 239), (31, 0, 255), (31, 0, 255),
     (29, 0, 239), (27, 0, 223), (25, 0, 207), (23, 0, 191), (21, 0, 175), (19, 0, 159), (17, 0, 143), (15, 0, 127),
     (13, 0, 111), (11, 0, 95), (9, 0, 79), (7, 0, 63), (5, 0, 47), (3, 0, 31), (1, 0, 15)]]


# 手动旋钮调速效果
def manual():
    while 1:
        time.sleep(0.01)
        if mode == 0:
            fan.duty(596 + 4 * r.value())
            argb.fill(rgb_arr[r.value()])
            argb.write()


# 渐变效果
def gradient():
    while 1:
        time.sleep(0.1)
        for i in range(256):
            if mode == 1:
                argb.fill((i, 255 - i, 0))
                argb.write()
                time.sleep(0.005)
            else:
                break
        for i in range(256):
            if mode == 1:
                argb.fill((255 - i, 0, i))
                argb.write()
                time.sleep(0.005)
            else:
                break
        for i in range(256):
            if mode == 1:
                argb.fill((0, i, 255 - i))
                argb.write()
                time.sleep(0.005)
            else:
                break


# 呼吸效果
def fade():
    while 1:
        time.sleep(0.1)
        effect = random.choice(effects)
        for i in effect:
            if mode == 2:
                argb.fill(i)
                argb.write()
                time.sleep(0.12)
            else:
                break


def switch_detect():
    global gradient_status
    global fade_status
    while 1:
        if button.value() == 0:
            mode_switch()
            time.sleep(0.3)


#             _thread.stop_thread(_thread_gradient)
#             gradient_status = False
#             _thread.stop_thread(_thread_fade)
#             fade_status = False

# 模式切换
def mode_switch():
    global mode
    global task_rgb
    mode = mode + 1
    if mode >= 3:
        mode = 1


# 检测编码器旋转
def EC11_detect():
    global ex, mode
    while 1:
        if r.value() == ex:
            pass
        else:
            print(r.value())
            ex = r.value()
            mode = 0
        time.sleep(0.1)


if __name__ == '__main__':
    # 指定针脚
    EC11_BUTTON = 15
    EC11_CLK = 32
    EC11_DT = 33
    FAN_PWM = 13
    LIGHT_PWM = 12
    p15 = Pin(14, Pin.IN, Pin.PULL_DOWN)
    print(p15.value())

    r = RotaryIRQ(pin_num_clk=EC11_CLK,  # 时钟GPIO
                  pin_num_dt=EC11_DT,  # 数据GPIO
                  min_val=1,  # 最小值
                  max_val=100,  # 最大值
                  reverse=True,  # 反向增加
                  half_step=True,  # 半步模式，体验更流畅
                  range_mode=RotaryIRQ.RANGE_BOUNDED)  # _BOUNDED越界截取，_WRAP越界从另一端取值

    # 从文本文档读取初始值
    f = open('init.txt')
    init = f.read().split(',')
    r.setValue(int(init[0]))
    ex = r.value()
    mode = int(init[1])
    exmode = mode
    button = Pin(EC11_BUTTON, Pin.IN, Pin.PULL_UP)
    fan = PWM(Pin(FAN_PWM, Pin.OUT), duty=1, freq=23400)
    argb = NeoPixel(Pin(LIGHT_PWM, Pin.OUT), 36)
    gradient_status = False
    fade_status = False
    _thread.start_new_thread(EC11_detect, ())  # 旋钮变化检测
    _thread.start_new_thread(switch_detect, ())  # RGB切换检测
    _thread.start_new_thread(gradient, ())  # 线程：渐变效果
    _thread.start_new_thread(fade, ())  # 线程：呼吸效果

    # 主循环
    while 1:
        file = open('init.txt', 'w+')
        file.write(str(r.value()) + ',' + str(mode))
        if mode == 0:
            fan.duty(596 + 4 * r.value())
            argb.fill(rgb_arr[r.value() - 1])
            argb.write()
        time.sleep(0.1)



